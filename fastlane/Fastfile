require_relative './libs/path_helper.rb'
require_relative './libs/project_helper.rb'

extend PathHelper
extend ProjectHelper


default_platform(:ios)

before_all do
  repository_root = File.expand_path(File.join(__dir__, '../'))
  ENV['FL_ROOT'] = repository_root
  ENV['OUTPUT_DIR'] = File.join(repository_root, 'build', 'output')
  UI.message("Repository_root is #{repository_root}.")
end

########################################################################
# Lanes related to Building and Testing the code
########################################################################
# | Lane         | Configuration            | Scheme                   |
# | -------------|--------------------------|--------------------------|
# | test         | Debug                    | ToySwiftUI               |
# | beta         | Debug                    | ToySwiftUI               |
# | alpha        | alpha                    | ToySwiftUI               |
# | release      | release                  | ToySwiftUI               |
########################################################################

desc "Build Debug"
lane :test do
  run_tests(
    workspace: "ToySwiftUI.xcworkspace",
    scheme: "ToySwiftUI",
    configuration: "Debug",
    destination: "platform=iOS Simulator,name=iPhone 14 Pro",
    xcpretty_formatter: xcpretty_formatter_path,
    derived_data_path: derived_data_path,
    reset_simulator: true,
    testplan: "MyTestPlan"
  )
  UI.success("test debug游때")
end

desc "Build Debug"
lane :beta do
  build_ios_app(
    scheme: "ToySwiftUI",
    configuration: "Debug",
    destination: "generic/platform=iOS Simulator",
    xcargs: "EXCLUDED_ARCHS=arm64",
    xcpretty_formatter: xcpretty_formatter_path,
    derived_data_path: derived_data_path,
    skip_package_ipa: true,
    skip_archive: true,
  )
  UI.success("build debug游때")
end

desc "Build Alpha"
lane :alpha do
  build_ios_app(
    scheme: "ToySwiftUI",
    configuration: "Alpha",
    destination: "generic/platform=iOS Simulator",
    xcargs: "EXCLUDED_ARCHS=arm64",
    xcpretty_formatter: xcpretty_formatter_path,
    derived_data_path: derived_data_path,
    skip_package_ipa: true,
    skip_archive: true,
  )

  # upload_symbols_to_crashlytics(
  #   dsym_path: lane_context[SharedValues::DSYM_OUTPUT_PATH],
  #   gsp_path: "#{ENV['FL_ROOT']}/Firebase/GoogleService-Info.plist",
  #   binary_path: "#{derived_data_path}/SourcePackages/checkouts/firebase-ios-sdk/Crashlytics/upload-symbols",
  # )
  UI.success("build alpha游때")
end

desc "Build Debug"
lane :release do
  UI.success("build release游때")
end
